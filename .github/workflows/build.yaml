on:
  push:
    branches: [ "main", "build" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven
      - name: Run tests and collect coverage
        run: mvn -B test -f primihub-fusion/fusion-api/pom.xml
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: ./primihub-fusion/fusion-api

  build-fusion:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, macOS-latest ]
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven
      - name: Build with Maven
        run: |
          if [ $(uname -s) == "Linux" ];
          then
            OS=linux
          elif [ $(uname -s) == "Darwin" ];
          then
            OS=osx
          fi
          mvn -B package --file primihub-fusion/pom.xml -Dmaven.test.skip=true -Dasciidoctor.skip=true -Dos.detected.classifier=${OS}-$(uname -m)

  build-service:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, macOS-latest ]
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven
      - name: Build with Maven
        run: |
          if [ $(uname -s) == "Linux" ];
          then
            OS=linux
          elif [ $(uname -s) == "Darwin" ];
          then
            OS=osx
          fi
          mvn -B package --file primihub-fusion/pom.xml -Dmaven.test.skip=true -Dasciidoctor.skip=true -Dos.detected.classifier=${OS}-$(uname -m)

  build-console:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js environment
        uses: actions/setup-node@v3.5.0
      - name: Build
        run: cd primihub-webconsole && npm install
